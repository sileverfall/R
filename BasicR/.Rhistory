library(XML);
url1<-"http://data.caixin.com/macro/macro_indicator_more.html?id=F0001&cpage=2&pageSize=30&url=macro_indicator_more.html#top";
url<-htmlParse(url1,encoding="UTF-8")#把html文件读入r语言中并解析
url<-'http://movie.douban.com/top250?start=0&filter=&type='
movie.info<-data.frame()
for(j in 1:10)    {
num<-25*(j-1)
url<-gsub('(?<=(start=))\\d+',num,url,perl=TRUE)
web<-readLines(url,encoding="UTF-8")
pattern<-'<span class="title">\\w+'
names.content<-iconv(web[grep(pattern,web)],from="UTF-8",to="GB2312")
names.local<-gregexpr('>\\w+',names.content)
gcont.name<-function(content,location)   {              substr(content,location+1,location+attr(location,"match.length")-1)
}
movie.names<-0
for(i in 1:length(names.content))         {
movie.names[i]<-gcont.name(names.content[i],names.local［i］)
}
cars
plot(cars$dist~cars$speed)
sales<-read.csv("dailysales.csv", header=TRUE)
sales<-read.csv("dailysales.csv", header=TRUE)
hist(islands)
plot(density(rnorm(1000)))
hist(islands)
hist(islands)
plot(density(rnorm(1000)))
colors()
palette
palette()
heat.colors(5)
install.packages("RColorBrewer")
library(RColorBrewer)
display.brewer.all()
brewer.pal(7,"Y1)rRd")
brewer.pal(7,"Y1OrRd")
brewer.pal(7,"Y1OrRd")
brewer.pal(7,"YlOrRd")
display.brewer.pal(7,"YlOrRd")
sales <-
read.csv("citysales.csv",header = TRUE)
sales <-
read.csv("/Users/Wan_Ning/Documents/R advanced/Code/Chapter 1/Data Files",header=TRUE)
sales <-
read.csv("citysales.csv",header = TRUE)
sales <-
read.csv("citysales.csv",header = T)
sales <- read.csv("citysales.csv")
library(.csv)
sales <- read.csv("/Users/Wan_Ning/Documents/R advanced/Code/Chapter 1/Data Files/citysales.csv")
barplot(as.matrix(sales[,2:4]),beside = T)
legend = sales$City,
col=c("red","blue","green","orange","pink")
bolder="white"
sales <- read.csv("/Users/Wan_Ning/Documents/R advanced/Code/Chapter 1/Data Files/citysales.csv")
sales <- read.csv("/Users/Wan_Ning/Documents/R advanced/Code/Chapter 1/Data Files/citysales.csv",header = TRUE)
barplot(as.matrix(sales[,2:4]),beside = T,legend = sales$City,col=c("red","blue","green","orange","pink"),bolder="white")
sales <- read.csv("/Users/Wan_Ning/Documents/R advanced/Code/Chapter 1/Data Files/citysales.csv",header = TRUE)
barplot(as.matrix(sales[,2:4]),beside = T,legend = sales$City,col=c("red","blue","green","orange","pink"),border="white")
sales<-read.csv("dailysales.csv",header = TRUE)
plot(sales$units~as.Date(sales$date,"%d%m%y")),
plot(sales$units~as.Date(sales$date,"%d%m%y"))
sales<-read.csv("dailysales.csv",header = TRUE)
sales<-read.csv("dailysales.csv",header = TRUE)
getwd();
setwd();
setwd(/Users/Wan_Ning/Documents/R advanced/Code/Chapter 1);
sales<-read.csv("dailysales.csv", header=TRUE)
setwd(Users/Wan_Ning/Documents/R advanced/Code/Chapter 1);
sales<-read.csv("dailysales.csv",header = TRUE)
setwd(/Users/Wan_Ning/Documents/R advanced/Code/Chapter 1);
setwd(/Users/Wan_Ning/Documents/R advanced/Code/Chapter 1);
sales<-read.csv("dailysales.csv",header = TRUE)
getwd()
setwd('~/Documents/R/BasicR/')
getwd()
getwd() #檢視現在工作的位置
getwd() #檢視現在工作的位置
setwd('~/Documents/R/BasicR/')#設定工作的位置
setwd('~/Documents/R/BasicR/')#設定工作的位置
setwd('~/Documents/R/BasicR/')#設定工作的位置
setwd('~/Documents/R/BasicR/')#設定工作的位置
getwd() #檢視現在工作的位置
setwd('~/Documents/R/BasicR/')#設定工作的位置
help(package = 'base')
?sum
?base::sum
help.search('sum')
??sum
data()
data()# 使用內建資料集
ls()
rm()#刪除現有變數
ls()
rm('movie.info')
rm(url)
rm(url1)
class()
x=c(1,2,3,7)
y=c(2,3,5,1)
x+y
x*y
x-y
x/y
x+10
x + c(10)
x + c(1,2)
x + c(1,2,1,2)
length(x)
c(x,y)
sum(x)
names(x) = c("A","B","C")
x
names(x) = c("A","B","C","D")
x
A
x > 2
x <= 1
x != 2
x[c(1)]
x['A']
x[x > 1 ] # boolean factor(condition)
seq(from=1,to=20)
1:20
seq(1,20,by=2)
seq(1,20,length=2)
seq(1,20,length=5) #長度
seq(1,20,length=4) #長度
seq(1,20,length=3) #長度
rep(1,times=5)
#向量
#長度相等運算
x=c(1,2,3,7)
y=c(2,3,5,1)
x+y
x*y
x-y
x/y
#長度不等運算
x+10
x + c(10)
x + c(1,2)#向量不足會重複循環
x + c(1,2,1,2)
#向量長度
length(x)
#增加向量元素
c(x,y)
#向量加總
sum(x)
#指定向量名
names(x) = c("A","B","C","D")
x
#boolean
x > 2
x <= 1
x != 2
#index 從1開始
x[c(1)] #index
x['A'] # name
x[x > 1 ] # boolean factor(condition)
#seq()
seq(from=1,to=20)
1:20
seq(1,20,by=2) #間隔
seq(1,20,length=3) #長度為3，而且要等距
#rep()重複產生某元素
rep(1,times=5)
rep(c(1,2),times=5)
rep(c(1,2),times=5)
rep(c(1,2),each=5)
rep_len(c(1,2),5)#直到元素滿五個為止
paste("life","is","so","complex")
paste("so","complex",sep="-")
paste(c("life","is"),1:2)
paste(c("life","is"),1:2,collapse = "+")
length(paste("life","is","so","complex"))
length(paste(c("life","is"),1:2))
